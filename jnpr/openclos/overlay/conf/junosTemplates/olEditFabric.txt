replace:
switch-options {
    vtep-source-interface lo0.0;
    vrf-import LEAF-IN;
    vrf-target target:{{esiRouteTarget}};
    route-distinguisher {{routerId}}:5000;
}

policy-options {
    replace:
    policy-statement LEAF-IN {
        term import_leaf_esi {
            from community comm-leaf-esi;
            then accept;
        }
        term default {
            then reject;
        }
    }
    replace:
    community comm-leaf-esi members target:{{esiRouteTarget}};
}    

protocols {
    evpn {
        encapsulation vxlan;
        multicast-mode ingress-replication;
    }
}

{% if role == "spine" %}
routing-options {
    replace:
    router-id {{routerId}};
    replace:
    forwarding-table {
        ecmp-fast-reroute;
    }
}

protocols {
    bgp {
        log-updown;
        graceful-restart;
        replace:
        group overlay-evpn {
            type internal;
            family evpn signaling;
            local-address {{routerId}};
            local-as {{asn}};
            multipath;
            {% for neighborIp in podLeafs %}neighbor {{neighborIp}};
            {% endfor %}        
            cluster {{routeReflector}};
        }
        group overlay-evpn-rr {
            type internal;
            family evpn signaling;
            local-address {{routerId}};
            local-as {{asn}};
            multipath;
            {% for neighborIp in allSpines %}neighbor {{neighborIp}};
            {% endfor %}        
        }
        bfd-liveness-detection {
            minimum-interval 350;
            multiplier 3;
            session-mode automatic;
        }
    }
}
{% endif %}

{% if role == "leaf" %}
protocols {
    bgp {
        log-updown;
        graceful-restart;
        replace:
        group overlay-evpn {
            type internal;
            family evpn signaling;
            local-address {{routerId}};
            local-as {{asn}};
            multipath;
            {% for neighborIp in podSpines %}neighbor {{neighborIp}};
            {% endfor %}
            {% if remoteGateways %}import OVERLAY-IN;{% endif %}
        }
        bfd-liveness-detection {
            minimum-interval 350;
            multiplier 3;
            session-mode automatic;
        }
    }
}

{% if remoteGateways %}
policy-options {
    policy-statement OVERLAY-IN {
        term reject-remote-gw {
            from {
                family evpn;
                next-hop [ {% for gw in remoteGateways %}{{gw}} {% endfor %}];
                nlri-route-type [ 1 2 ];
            }
            then reject;
        }
        term accept-all {
            then accept;
        }
    }
}    
{% endif %}
{% endif %}

