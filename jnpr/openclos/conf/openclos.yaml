# Deployment mode
# ndIntegrated: true/false indicates if deployed with Network Director
# ztpStaged: true/false, true indicates ZTP process goes through 2-stage
# device configuration. During leaf device boot-strap, it gets generic config,
# then OpenClos finds the topology and applies new topology.
# False indicates all leaf configs are generated based on cabling-plan and 
# deployed to the device using ZTP process. 
# ztpStagedAttempt is how many times OpenClos tries to connect to leaf
# to collect lldp data when it receives trap from that leaf. 
# default is 5 times. 0 means no-op so it basically disables the 2-stage.
# ztpStagedInterval is how long OpenClos waits in between retries. 
# default is 60 seconds. 0 means do not wait. 
# ztpStagedAttempt and ztpStagedInterval only take effect
# when ztpStaged is set to true.
deploymentMode :
    ndIntegrated : false
    ztpStaged : true
    ztpStagedAttempt: 5
    ztpStagedInterval: 60
    
# Generated file/configuration location
# default value 'out' relative to current dir 
# can take absolute path as '/tmp/out/'
outputDir : out

# Database URL
# Please NOTE dbUrl is used by sqlite only. For all other databases, please see
# MySQL parameters below as an example.

# sqlite parameters
# for relative file location ./data/sqllite3.db, url is sqlite:///data/sqllite3.db
# absolute file location /tmp/sqllite3.db, url is sqlite:////tmp/sqllite3.db
dbUrl : sqlite:///data/sqllite3.db

# MySQL  parameters
#dbDialect : mysql
#dbHost : localhost
#dbUser : root
#dbPassword : password
#dbName : openclos

# debug SQL and ORM
# "true" will enable logging all SQL statements to underlying DB
debugSql : false
debugRest : true

#device configuration will be stored by default in DB
#"file" will allow device configuration to store in DB and File
writeConfigInFile : false

    
# Device family and port names
# qfx5100-24q-2p ports could be [0-32] with two four-port expansion modules
# unlike 48s or 96s for 24Q there is no specific uplink/downlink
deviceFamily :
    qfx5100-24q-2p :
        uplinkPorts : 
        downlinkPorts : 
        ports : 'et-0/0/[0-23]' 
    qfx5100-48s-6q :
        uplinkPorts : 'et-0/0/[48-53]' 
        downlinkPorts : 'xe-0/0/[0-47]'
        ports :  
    qfx5100-96s-8q :
        uplinkPorts : 'et-0/0/[96-103]' 
        downlinkPorts : 'xe-0/0/[0-95]'
        ports :  
    ex4300-48p :
        uplinkPorts : 'et-0/1/[0-3]' 
        downlinkPorts : 'ge-0/0/[0-47]'
        ports :  

# List of colors used in the DOT file to represent interconnects 
DOT :
   colors :
       - blue
       - green
       - violet
       - brown
       - aquamarine
       - pink
       - cadetblue
   ranksep : 5 equally

# HttpServer for REST and ZTP.
# To make ZTP work the port has to be 80. IpAddr specified here
# is used to populate dhcpd.conf fot ZTP. If no address is provided
# REST will start at 0.0.0.0
httpServer :
    ipAddr : 0.0.0.0
    port : 80

# Number of threads used to communicate with devices
report :
    threadCount : 10
         
# SNMP trap settings for NetworkDirector and OpenClos
# OpenClos uses traps to perform 2-stage ZTP process
# target address is where OpenClos is running (same as httpServer:ipAddr)
# NetworkDirector trap settings are optional, should be set only when
# OpenClos is integrated with NetworkDirector, enabling networkdirector_trap_group
# would allow devices to be auto discovered by NetworkDirector.
# threadCount: Number of threads used to start 2-stage configuration for devices
snmpTrap :
    networkdirector_trap_group :
        port : 10162
        target : 0.0.0.0
    openclos_trap_group :
        port : 20162
        target : 0.0.0.0
    threadCount : 10


# various scripts
# Note for release 1.0, the backup database script is engine specific
script : 
    database: 
        backup : script/backup_sqlite.sh

# CLI configuration
cli:
    # This is the text that would appear at each prompt
    prompt_text: "openclos"
    # prompt_style follows prompt_text and these together make the command-
    #              prompt of the CLI
    #              The cli code will add <space> after the prompt_style
    prompt_style: "#"
    # header is the text that appears when CLI is invoked, and CLI prompt-
    #        is issued
    header: "Welcome to openclos - by Juniper Networks"
    # on_exit is the message that would appear when CLI session is terminated
    on_exit: "goodbye"
