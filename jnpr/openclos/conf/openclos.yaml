# Deployment mode
# ztpStaged: true/false, true indicates ZTP process goes through 2-stage
# device configuration. During leaf device boot-strap, it gets generic config,
# then OpenClos finds the topology and applies new topology.
# False indicates all leaf configs are generated based on cabling-plan and 
# deployed to the device using ZTP process. 
# ztpStagedAttempt: How many times OpenClos tries to connect to leaf
# to collect lldp data when it receives trap from that leaf. 
# default is 5 times. 0 means no-op so it basically disables the 2-stage.
# ztpStagedInterval: How long OpenClos waits in between retries. 
# default is 60 seconds. 0 means do not wait. 
# ztpVcpLldpDelay: How long OpenClos waits between delete VCP on EX4300 and LLDP collection
# ztpStagedAttempt and ztpStagedInterval only take effect
# when ztpStaged is set to true.
deploymentMode :
    ztpStaged : true
    ztpStagedAttempt: 5
    ztpStagedInterval: 30
    ztpVcpLldpDelay: 40
    
# Generated file/configuration location
# default value 'out' relative to current dir 
# can take absolute path as '/tmp/out/'
outputDir : out

# Database URL
# Please NOTE dbUrl is used by sqlite only. For all other databases, please see
# MySQL parameters below as an example.

# sqlite parameters
# for relative file location ./data/sqllite3.db, url is sqlite:///data/sqllite3.db
# absolute file location /tmp/sqllite3.db, url is sqlite:////tmp/sqllite3.db
dbUrl : sqlite:///data/sqllite3.db

# MySQL  parameters
#dbDialect : mysql
#dbHost : localhost
#dbUser : root
#dbPassword : password
#dbName : openclos

# debug SQL and ORM
# "true" will enable logging all SQL statements to underlying DB
debugSql : false
debugRest : true

#device configuration will be stored by default in DB
#"file" will allow device configuration to store in DB and File
writeConfigInFile : false


# List of colors used in the DOT file to represent interconnects 
DOT :
   colors :
       - blue
       - green
       - violet
       - brown
       - aquamarine
       - pink
       - cadetblue
   ranksep : 5 equally

# HttpServer for REST and ZTP.
# To make ZTP work the port has to be 80. IpAddr specified here
# is used to populate dhcpd.conf fot ZTP. If no address is provided
# REST will start at localhost
# If protocol is http: 
#     - certificate is ignored.
#     - basic authentication is supported but disabled by default.
# If protocol is https: 
#     - basic authentication is enabled by non-empty username and password.
#     - this openclos.yaml comes with a predefined username 'juniper' and password is 'juniper' ($9$R9McrvxNboJDWLJDikTQEcy)
#     - if you need to use a different password, run "python crypt.py <cleartext_password>" to generate a 2-way encrypted password
#       and copy it to 'password' attribute
#     - certificate must be full path to the server cert file. it can be generated by running "openssl req -new -x509 -keyout server.pem -out server.pem -days 365 -nodes"
#     - you MUST change 'ipAddr' to the IP address of the REST server. REST server won't run if ipAddr is 0.0.0.0 in https mode 
#restServer :
#    version : 1
#    protocol : https
#    ipAddr : 0.0.0.0
#    port : 20443
#    username : juniper 
#    password : $9$R9McrvxNboJDWLJDikTQEcy
#    certificate : ~/openclos.pem
restServer :
    version : 1
    protocol : http
    ipAddr : 0.0.0.0
    port : 20080
    
# Number of threads used to communicate with devices
report :
    threadCount : 20
         
# SNMP trap settings for OpenClos
# OpenClos uses traps to perform staged ZTP process
# target address is where OpenClos is running (same as httpServer:ipAddr)
# threadCount: Number of threads used to start 2-stage configuration for devices
snmpTrap :
    openclos_trap_group :
        port : 20162
        target : 0.0.0.0
    threadCount : 10


# various scripts
# Note for release 1.0, the backup database script is engine specific
script : 
    database: 
        backup : script/backup_sqlite.sh

# CLI configuration
cli:
    # This is the text that would appear at each prompt
    prompt_text: "openclos"
    # prompt_style follows prompt_text and these together make the command-
    #              prompt of the CLI
    #              The cli code will add <space> after the prompt_style
    prompt_style: "#"
    # header is the text that appears when CLI is invoked, and CLI prompt-
    #        is issued
    header: "Welcome to openclos - by Juniper Networks"
    # on_exit is the message that would appear when CLI session is terminated
    on_exit: "goodbye"

# Optional callback to control 2-stage configuration processing.
# callback can be a shell command or a shell script. 
# if the callback exit code is 0, 2-stage configuration for the current leaf continues, 
# if the callback exit code is not 0, 2-stage configuration for the current leaf aborts 
#twoStageConfigurationCallback:

# generic plugin configuration
plugin:
    -
        name: overlay
        package: jnpr.openclos.overlay
        # Number of threads in the thread pool for commiting configuration on device
        # threadCount: 10
        # Number of seconds. Controls how frequent to scan "commit job queue"
        # dispatchInterval: 10

# device connector configuration
deviceConnector:
    CachedConnectionFactory:
        # keepAliveTimeout: 90
        # cleanerThreadWaitTime: 60
    NetconfConnection:
        # autoProbe: 15
